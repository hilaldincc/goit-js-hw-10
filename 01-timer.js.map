{"version":3,"file":"01-timer.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n/* html elementlerini seçtik */\nconst startButton = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n/* Flatpickr’i başlat ve tarih kontrolü yap */\nlet selectedDate = null;\nlet timerId = null;\n\nstartButton.disabled = true; // Başta devre dışı\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        title: 'Hata',\n        message: 'Lütfen gelecekte bir tarih seçin!',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      selectedDate = selectedDates[0];\n      startButton.disabled = false;\n    }\n  },\n});\n\n/* Butona tıklanınca sayaç başlasın */\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true; // Tekrar tıklamayı engelle\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = selectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      iziToast.success({\n        title: 'Tamamlandı',\n        message: 'Geri sayım sona erdi!',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\n/* Yardımcı fonksiyonlar */\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startButton","dateInput","daysEl","hoursEl","minutesEl","secondsEl","selectedDate","timerId","flatpickr","selectedDates","iziToast","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"sFAOA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EAErDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAe,KACfC,EAAU,KAEdP,EAAY,SAAW,GAEvBQ,EAAUP,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,MAAM,CACb,MAAO,OACP,QAAS,oCACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,KAEvBM,EAAeG,EAAc,CAAC,EAC9BT,EAAY,SAAW,GAE1B,CACH,CAAC,EAGDA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GAEvBO,EAAU,YAAY,IAAM,CAE1B,MAAMI,EAAOL,EADD,IAAI,KAGhB,GAAIK,GAAQ,EAAG,CACb,cAAcJ,CAAO,EACrBG,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,wBACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,GACvB,MACD,CAED,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExDT,EAAO,YAAce,EAAeL,CAAI,EACxCT,EAAQ,YAAcc,EAAeJ,CAAK,EAC1CT,EAAU,YAAca,EAAeH,CAAO,EAC9CT,EAAU,YAAcY,EAAeF,CAAO,CAC/C,EAAE,GAAI,CACT,CAAC,EAGD,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAOI,EAAK,KAAQ,GAAM,EACzCH,EAAU,KAAK,MAAOG,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}